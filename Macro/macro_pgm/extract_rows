/* testing the macro of extracting the head/tail rows of specified datasets */
options mlogic mprint;
%macro extract_rows(dsin = ,n = 1/* the number of rows to extract*/, pos = tail, dsout = , condition = /* boolean expression: conditions to placed inside if-else procedure */);
	%local count/* #(handling datsets)*/ i ;
	%let count = 1;
	%do %while(%scan(&dsin, &count, %str( )) ne);
		%if &count = 1 %then %do;
			data &dsout;
				length data_scr $64;
				format data_scr;
				if 0 then set %scan(&dsin, &count, %str( )) nobs=nobs;	
				data_scr = "%scan(&dsin, &count, %str( ))";
				retain out_n 0;
				retain p loop_flag 1;
				drop out_n p loop_flag;
				%if &pos = tail %then %do; 
					do while(loop_flag = 1);
						temp_p = nobs - p + 1;
						%if %length(&condition) > 0 %then %do; 
							set %scan(&dsin, &count, %str( )) point= temp_p;
							if &condition then do; 		
								output;
								out_n + 1;
							end;
						%end;
						%else %do;
							set %scan(&dsin, &count, %str( )) point= temp_p;
							output;
							out_n + 1;
						%end;
						p + 1;
						if (out_n >= &n) or (p > nobs) then loop_flag = 0;
					end; 
					drop temp_p;
				%end;
				%else %do; 
					do while(loop_flag = 1);
						%if %length(&condition) > 0 %then %do; 
							set %scan(&dsin, &count, %str( )) point= p;
							if &condition then do; 
								output;
								out_n + 1;
							end;
						%end;
						%else %do;
							set %scan(&dsin, &count, %str( )) point= p;
							output;
							out_n + 1;
						%end;
						p + 1;
						if (out_n >= &n) or (p > nobs) then loop_flag = 0;
					end; 
				%end;				
				stop;
			run;
		%end;
		%else %do;
			data temp;
				length data_scr $64;
				format data_scr;
				data_scr = "%scan(&dsin, &count, %str( ))";
				retain out_n 0;
				retain p loop_flag 1;
				drop out_n p temp_p loop_flag;
				if 0 then set %scan(&dsin, &count, %str( )) nobs=nobs;
				%if &pos = tail %then %do; 
					do while(loop_flag = 1);
						temp_p = nobs - p + 1;
						%if %length(&condition) > 0 %then %do; 
							set %scan(&dsin, &count, %str( )) point= temp_p;
							if &condition then do; 
								output;
								out_n + 1;
							end;
						%end;
						%else %do;
							set %scan(&dsin, &count, %str( )) point= temp_p;
							output;
							out_n + 1;
						%end;
						p + 1;
						if (out_n >= &n) or (p > nobs) then loop_flag = 0;
					end; 
					drop temp_p;
				%end;
				%else %do; 
					do while(loop_flag = 1);
						%if %length(&condition) > 0 %then %do; 
							set %scan(&dsin, &count, %str( )) point= p;
							if &condition then do; 
								output;
								out_n + 1;
							end;
						%end;
						%else %do;
							set %scan(&dsin, &count, %str( )) point= p;
							output;
							out_n + 1;
						%end;
						p + 1;
						if (out_n >= &n) or (p > nobs) then loop_flag = 0;
					end; 
				%end;				
				stop;
			run;
			proc append base=&dsout data=temp force;
			run;
		%end;
		%let count = %eval(&count + 1);
	%end;
	proc delete data = temp;
	run;
	quit;
%mend;

/*%extract_rows(dsin = test test1, dsout = concat_data, n=2, pos = head, condition = %str(id ne 1 and id ne 2 and strip(char) ne '3'))*/
