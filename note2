data qualify;
set score;
k=0;
array chengji(3) x y z;
array base(3) _temporary_(60 60 60);
do i=1 to 3;
if chengji(i) ge base(i) then k+1;
end;
if k=3 then output qualify;
run;

data single;
input id$ q1$ q2$ q3$ @@;
cards;
01 a b c 02 a b a
03 b a c 04 a b c
;
run;
data correct(drop=i);
k=0;
set single;
array q(3);
array crt(3) $_temporary_('a','b','c');
do i=1 to 3;
if q(i) eq crt(i) then k+1;
end;
run;

data a;
input x1-x7;
cards;
23 44 91 13 42 34 26
14 18 10 20 33 11 50
;
run;
data final;
set a;
array arr(1:7) x:;
array copy(7) cx1-cx7;
do m=1 to dim(arr);
copy(m)=arr(m);
end;
do i=1 to dim(copy);
do j=i+1 to dim(copy);
if copy(j)>copy(i) then do;
temp=copy(j);
copy(j)=copy(i);
copy(i)=temp;
end;
end;
end;
run;
 /*宏变量*/
data test;
input var @@;
datalines;
1 2 3 4 5
;
run;
proc sql noprint;
select var into:macro_var
separated by ' '
from test;
quit;
 option symbolgen;
 data missing;
 input n1 n2 n3 n4 n5 n6 n7 n8 c1$ c2$ c3$ c4$;
 datalines;
 1 . 1 . 1 .1 4 a . c .
 1 1 . . 2 . . 5 e . g h
 1 . 1 . 3 . . 6 . . k 1
 1 . . . . . . . a b c d
 ;
 data _null_;
 if 0 then
 set missing nobs=obs;
 array num_vars[*] _numeric_;
 array char_vars[*] _character_;
 call symputx('num_qty',dim(num_vars));
 call symputx('char_qty',dim(char_vars));
 call symputx('m_obs',obs);
 stop;
 run;
 data _null_;
set missing end=finished;
array num_vars[*] _numeric_;
 array char_vars[*] _character_;
 array num_miss[&num_qty](&num_qty * 0);
 array char_miss[&char_qty](&char_qty * 0);
 length list $ 50;
 do i=1 to dim(num_vars);
 if num_vars(i) eq . then num_miss(i)+1;
 end;
 do i=1 to dim(char_vars);
 if char_vars(i) eq "" then char_miss(i)+1;
 end;
if finished then do;
do i=1 to dim(num_vars);
if num_miss(i)/&m_obs. ge 0.7 then list=trim(list)||' '||trim(vname(num_vars(i)));
end;
do i=1 to dim(char_vars);
if char_miss(i)/&m_obs. ge 0.7 then list=trim(list)||' '||trim(vname(char_vars(i)));
end;
call symputx('mlist',list);
end;
run;
data notmissing;
set missing(drop =&mlist);
run;

data t;
input x$;
cards;
12
2
3
6
;
run;
data tt;
set t;
x=input(x,2.);
do;
if mod(x,2)=1 then x=4;
end;
run;
/*rename */
data a;
input x y;
cards;
1 2
;
data b;
set a;
rename y=yy;
keep x y;
run;
data c;
set a(keep=x rename=(x=xx));
if xx=1 then m=10;
run;
data d(rename=(x=xx));
set a(keep=x);
if x=1 then m=10;
run;
/*output */
/*由一个输入数据行创建多个输出观测*/
data a;
input id x1-x3;
cards;
101 10 20 30
102 40 50 60
103 29 40 39
;
data b;
set a;
x=x1;output;
x=x2;output;
x=x3;output;
output;
run;
/*根据条件输出多个数据集*/
data out1 out2;
set sashelp.class;
if _n_ le 7 then output out1;
else output out2;
run;
proc sort data=a;by id;
run;
data c;
set a;
by id;
/*retain rt;*/
if first.id then rt=0;
if last.id then output;
rt=x1;
run;
data a;
set sashelp.class;
if _n_ le 4;
y=10;
run;
data a;
input x @@;
cards;
1 20 3 4
;
data b1;
set a;
if x=3;
y=x;
/*y的值缺失*/
data b2;
set a;
if x=3 then output;
y=x;
run;
/*保满足条件的前一条观测的x的值到y*/
data b3 ;
set a;
retain y;
if x=3 then output;
y=x;
run;
/*保留满足条件的当前观测到x值到y*/
data b ;
set a;
if x=3 then do;
y=x;
output;
run;
data a1(index=(x));
input x y@@;
cards;
101 1 1 10 2 20 3 30
;
run;
data b1;
input x y@@;
cards;
1 100 2 200
;
run;
data b2;
input x y @@;
cards;
1 100 2 200 2 280
;
run;
data b3;
input pnt y@@;
cards;
2 200 3 300 4 400
;
run;

proc sort data=b1;
by x;
run;
data a1;
merge al(in=ina) b1(in=inb);
by x;
if ina then output;
run;
data a1;
modify a1 b2;
by x;
run;
data a1;
set b3(rename=(y=y1));
modify a1 point=pnt;
y=y1;
run;
data master_trans;
input user_id trans_amt@@;
cards;
101 1000 102 1500 103 2000
;
run;
data day_trans;
input user_id day_amt@@;
cards;
102 50 102 60 103 30 110 80
;
run;
data master_trans;
modify master_trans day_trans;
by user_id;
trans_amt=trans_amt+day_amt;
if _iorc_=0 then replace;
else do;trans_amt=day_amt;_error_=0;
output;
end;
run;
data a;
input x$ y z@@;
cards;
a 10 20 b 30 40 c 50 60
;
run;
data _null_;
set a;
put  x= @ ;
put @15 y=4.3@;
put @25 z=2.;
run;
data a;
do i=1 to 5;
x=i+1;
put x=;
end;
run;
libname ch3 'E:\Users_Intern\test';
ods listing close;
ods output parameterstimates=et;
proc reg data=ch3.fitness outest=est;
model oxygen=age weight runtime runpulse restpulse maxpulse;
quit;
ods output close;
ods listing;
filename file 'E:\Users_Intern\test\utf.txt';
data _null_;
set sashelp.class;
file file encoding='utf-8';
put name weight;
run;
filename file 'E:\Users_Intern\test\filename.txt';
data a;
length temp $50;
file file filename=temp;
put 'abc';
fname=temp;
run;


data b;
length name $200;
input name;
name='E:\Users_Intern\test\'||strip(_infile_)||'.txt';
file anyname filevar=name;
date=date();
n=name;
format date yymmdd10.;
do;
put 'test'@;
put ','@;
put date;
end;
cards;
test_file1
test_file2
test_file3
;
run;

data _null_;
set sashelp.class(keep=name sex) nobs=obs end=last;
date=date();
file "E:\Users_Intern\test\test1.txt" dropover lrecl=32767;
if _n_=1 then
do;
put'header'@;
put date@; format date yymmdd10.;
put obs z8;
end;
do;
put name $ 1-10@;
put sex $ 15-16;
end;
if last then do;
put 'end';
end;
run;


/*??????*/
filename file 'E:\Users_Intern\test\utf.txt';
data unicode;
infile file encoding="utf-8";
input name $ weight;
run;
data num;
infile datalines dsd;
input x y z;
datalines;
,2,3
4,5,6
7,,9
;
run;
data num1;
infile datalines dsd dlm="";
input x y z;
datalines;
   2 3
 4 5 6
 7  9
 ;
run;
data weather;
infile datalines missover;
input temp1-temp5;
datalines;
97.9 98.1 98.3         
98.6 99.2 99.1 98.5 97.5
96.2 97.3 98.3 97.6 96.5
;
run;


data a;
input x y;
z1=x+y;
z2=sum(x,y);
cards;
1 2 . 5 8 .
;
run;


data a;
length x $8 y 8;
x="abcde";
y=100;
run;
proc sql;
alter table a 
modify
x char(3),
y num(2);
quit;
data a1;
set sashelp.class;
keep name weight;
run;
data a2;
set sashelp.class(keep=name weight);
run;
data a3;
set sashelp.class(keep=name weight);
x=1;
keep name x;
run;
data a4(keep=name x);
set sashelp.class(keep=name weight);
x=1;
run;
data a5;
set sashelp.class(keep=_character_);
run;
data a6;
set sashelp.class(keep=_numeric_);
run;
data retain_mis;
input id x@@;
cards;
1 10 2 10 3 .
4 . 5 20 6 .
;
run;
data a;
set retain_mis;
retain new_x;
if x ne . then new_x=x;
run;
libname chap4 "E:\Users_Intern\test";
data chap4.retain1;
input id txn_cde$ cns txn_dte$;
cards;
10 101 10 20070101
10 101 20 20080402
10 201 30 20050203
20 101 40 20040105
20 201 50 20040105
20 301 60 20070806
20 201 70 20050607
30 301 80 20070501
30 401 90 20070306
;
run;

proc sql;
create table sum as
select 
id
,sum(cns) as cns
,count(*) as count
,sum(case when txn_cde in("101" "201") then 1 else 0 end) as cnt_condi
,min(txn_dte)as min_txn_dte
from chap4.retain1;
group by id
;
quit;

proc sort data=chap4.retain1;by id txn_dte;run;
data test1;
set chap4.retain1;
by id txn_dte;
retain min_dte sum_cns cnt_condition;
if first.id then do;
min_dte=txn_dte;
sum_cns=0;
cnt=0;
cnt_condtion=0;
end;
min_dte=min(min_dte,txn_dte);
sum_cns+cns;
cnt+1;
cnt_condition+(txn_cde in("101" "201"));
if last.id;
run;

libname chap4 "E:\Users_Intern\test";
data chap4.retain2;
input id flag cde$ @@;
cards;
10 1 a 10 0 b 10 0 c
20 1 a 20 0 . 20 0 .
30 1 . 30 0 .
;
run;

proc sort data=chap4.retain2;by id descending flag;run;
data test2;
set chap4.retain2;
by id descending flag;
retain new;
if first.id then do;
   if cde eq "" then new="null";
   else new=cde;
   end;
   if cde ne "" then new=cde;
run;

data a;
set sashelp.class(keep=sex height weight);
run;
proc tabulate data=a;
class sex;
var height weight;
table sex*(height weight),mean;
run;
libname clinic 'E:\Users_Intern\test';
proc print data=clinic.admit;
run;

proc datasets;
contents data=sasueser._all_nods;
quit;
options nonumber nodate;
proc print data=sashelp.class;
var name sex age height weight;
where age>=10;
run;
options date;
proc freq data=sashelp.class;
where height>=60;
tables sex;
run;
options nodate pageno=3;
proc print data=sashelp.class;
run;
proc options;
run;

proc options option=yearcutoff;
run;
proc setinit;
run;
proc sort data=sashelp.class;
by weight;
run;
proc print data=sashelp.class noobs;
var age name height weight;
where age>12;
run;
libname chap4 'E:\Users_Intern\test';
proc print data=chap4.retain1;
id id;
var id cns;/*若没有var,则默认print所有变量*/
run;
proc sort data=sashelp.class out=work.a;
by descending weight;
run;

proc print data=chap4.retain1;
var id txn_cde cns txn_dte;
sum cns;
by id;
id id;
pageby id;
run;
title1 'SAS system';
title3 'sas system';
proc print data=sashelp.class;
run;
title1 'The SAS System';
proc print data=sashelp.class;
run;
footnote1 '';
proc print data=sashelp.class;
run;
title1;
proc print data=sashelp.class;
run;
proc tabulate data=sashelp.class;
var  height weight;
table max*(height weight);
run;

filename  test2 'E:\Users_Intern\test\test2.xlsx';
data exercise;
 infile test2;
input name$ age height weight;
run;
proc import datafile='E:\Users_Intern\test\test21.xls' out=a dbms=excel
replace;
run;
proc format fmtlib;
value idfmt
10='a'
20='b'
30='c';
run;
proc print data=chap4.retain1;
format id idfmt.;
footnote;
run;
proc print data=chap4.retain1;
run;
proc report data=sashelp.class nowd;
column name sex height age weight;
where age in (11,14,16);
define height/format=5.1 order descending;
run;
option pageno=1 nodate ps=64 ls=80;
data temp;
input x@@;
cards;
10 20 30
;
run;
data test(drop=i);
set temp;
array a(5) A1-A5;
do i=1 to 5;
   a(i)=i;
end;
run;
proc print noobs data=test;
run;
data missing;
input x y$ z$ m;
cards;
. . . 1
2 . 3 .
;
run;
proc print noobs data=missing;
run;
data result;
set missing;
array char _character_;
array numr _numeric_;
do over char;
if char eq "" then char="null";
end;
do over numr;
if numr eq . then numr=0;
end;
run;
data score;
input id$ x y z;
cards;
a 75 84 65
b 54 74 71
c 51 56 52
d 50 50 60
;
run;

data qualify;
set score;
k=0;
array chengji(3) x y z;
array base(3) _temporary_(60 60 60);
do i=1 to 3;
if chengji(i) ge base(i) then k+1;
end;
if k=3 then output qualify;
run;

data single;
input id$ q1$ q2$ q3$ @@;
cards;
01 a b c 02 a b a
03 b a c 04 a b c
;
run;
data correct(drop=i);
k=0;
set single;
array q(3);
array crt(3) $_temporary_('a','b','c');
do i=1 to 3;
if q(i) eq crt(i) then k+1;
end;
run;

data a;
input x1-x7;
cards;
23 44 91 13 42 34 26
14 18 10 20 33 11 50
;
run;
data final;
set a;
array arr(1:7) x:;
array copy(7) cx1-cx7;
do m=1 to dim(arr);
copy(m)=arr(m);
end;
do i=1 to dim(copy);
do j=i+1 to dim(copy);
if copy(j)>copy(i) then do;
temp=copy(j);
copy(j)=copy(i);
copy(i)=temp;
end;
end;
end;
run;
 /*宏变量*/
data test;
input var @@;
datalines;
1 2 3 4 5
;
run;
proc sql noprint;
select var into:macro_var
separated by ' '
from test;
quit;
 option symbolgen;
 data missing;
 input n1 n2 n3 n4 n5 n6 n7 n8 c1$ c2$ c3$ c4$;
 datalines;
 1 . 1 . 1 .1 4 a . c .
 1 1 . . 2 . . 5 e . g h
 1 . 1 . 3 . . 6 . . k 1
 1 . . . . . . . a b c d
 ;
 data _null_;
 if 0 then 
 set missing nobs=obs;
 array num_vars[*] _numeric_;
 array char_vars[*] _character_;
 call symputx('num_qty',dim(num_vars));
 call symputx('char_qty',dim(char_vars));
 call symputx('m_obs',obs);
 stop;
 run;
 data _null_;
set missing end=finished;
array num_vars[*] _numeric_;
 array char_vars[*] _character_;
 array num_miss[&num_qty](&num_qty * 0);
 array char_miss[&char_qty](&char_qty * 0);
 length list $ 50;
 do i=1 to dim(num_vars);
 if num_vars(i) eq . then num_miss(i)+1;
 end;
 do i=1 to dim(char_vars);
 if char_vars(i) eq "" then char_miss(i)+1;
 end;
if finished then do;
do i=1 to dim(num_vars);
if num_miss(i)/&m_obs. ge 0.7 then list=trim(list)||' '||trim(vname(num_vars(i)));
end;
do i=1 to dim(char_vars);
if char_miss(i)/&m_obs. ge 0.7 then list=trim(list)||' '||trim(vname(char_vars(i)));
end;
call symputx('mlist',list);
end;
run;
data notmissing;
set missing(drop =&mlist);
run;

data t;
input x$;
cards;
12
2 
3
6
;
run;
data tt;
set t;
x=input(x,2.);
do;
if mod(x,2)=1 then x=4;
end;
run;
/*rename */
data a;
input x y;
cards;
1 2
;
data b;
set a;
rename y=yy;
keep x y;
run;
data c;
set a(keep=x rename=(x=xx));
if xx=1 then m=10;
run;
data d(rename=(x=xx));
set a(keep=x);
if x=1 then m=10;
run;
/*output */
/*由一个输入数据行创建多个输出观测*/
data a;
input id x1-x3;
cards;
101 10 20 30
102 40 50 60
103 29 40 39
;
data b;
set a;
x=x1;output;
x=x2;output;
x=x3;output;
output;
run;
/*根据条件输出多个数据集*/
data out1 out2;
set sashelp.class;
if _n_ le 7 then output out1;
else output out2;
run;
proc sort data=a;by id;
run;
data c;
set a;
by id;
/*retain rt;*/
if first.id then rt=0;
if last.id then output;
rt=x1;
run;
data a;
set sashelp.class;
if _n_ le 4;
y=10;
run;
data a;
input x @@;
cards;
1 20 3 4
;
data b1;
set a;
if x=3;
y=x;
/*y的值缺失*/
data b2;
set a;
if x=3 then output;
y=x;
run;
/*保满足条件的前一条观测的x的值到y*/
data b3 ;
set a;
retain y;
if x=3 then output;
y=x;
run;
/*保留满足条件的当前观测到x值到y*/
data b4 ;
set a;
if x=3 then do;
y=x;
output;
end;
run;

/*contains application*/
data a;
input x $@@;
cards;
ab abc bca acd
;
data b;
set a;
where compress(x) like 'a_d';/*compress(x):删除x中的空格*/
run;
